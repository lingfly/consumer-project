<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.quick.spring.boot.consumer.dao.mapper.ConsumerOrderItemMapper">
  <resultMap id="BaseResultMap" type="com.github.quick.spring.boot.consumer.dao.entity.ConsumerOrderItem">
    <!--@mbg.generated-->
    <!--@Table consumer_order_item-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, order_id, order_sn, shop_id, product_id, `size`, price, total_price
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update consumer_order_item
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="order_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orderId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="order_sn = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orderSn,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="shop_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.shopId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`size` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.size,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="total_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.totalPrice,jdbcType=DECIMAL}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update consumer_order_item
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="order_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orderId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orderId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="order_sn = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orderSn != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orderSn,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="shop_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.shopId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.shopId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="`size` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.size != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.size,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.price != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="total_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.totalPrice != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.totalPrice,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into consumer_order_item
    (id, order_id, order_sn, shop_id, product_id, `size`, price, total_price)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.orderId,jdbcType=BIGINT}, #{item.orderSn,jdbcType=VARCHAR}, 
        #{item.shopId,jdbcType=BIGINT}, #{item.productId,jdbcType=BIGINT}, #{item.size,jdbcType=INTEGER}, 
        #{item.price,jdbcType=DECIMAL}, #{item.totalPrice,jdbcType=DECIMAL})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.github.quick.spring.boot.consumer.dao.entity.ConsumerOrderItem">
    <!--@mbg.generated-->
    insert into consumer_order_item
    (id, order_id, order_sn, shop_id, product_id, `size`, price, total_price)
    values
    (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, 
      #{shopId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{size,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    order_id = #{orderId,jdbcType=BIGINT}, 
    order_sn = #{orderSn,jdbcType=VARCHAR}, 
    shop_id = #{shopId,jdbcType=BIGINT}, 
    product_id = #{productId,jdbcType=BIGINT}, 
    `size` = #{size,jdbcType=INTEGER}, 
    price = #{price,jdbcType=DECIMAL}, 
    total_price = #{totalPrice,jdbcType=DECIMAL}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.github.quick.spring.boot.consumer.dao.entity.ConsumerOrderItem">
    <!--@mbg.generated-->
    insert into consumer_order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
</mapper>